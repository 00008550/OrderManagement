@model OrderManagement.Models.Order

@{
    ViewData["Title"] = "Create";
}

<div class="max-w-7xl mx-auto px-2 sm:px-6 lg:px-8">
    <div class="md:flex md:items-center md:justify-between border-b border-gray-200 py-2 mt-2 mb-4">
        <div class="flex-1 min-w-0">
            <h4 class="text-base text-gray-500">
                Orders
            </h4>
            <h2 class="text-2xl font-bold text-gray-800">Create</h2>
        </div>
    </div>
    <div class="bg-white shadow px-4 py-5 sm:rounded-lg sm:p-6">
        <div class="md:grid md:grid-cols-3 md:gap-6">
            <div class="md:col-span-1">
                <h3 class="text-lg font-medium leading-6 text-gray-900">New store Information</h3>
                <p class="mt-1 text-sm text-gray-500">
                    Please fill the all required fields
                </p>
            </div>
            <div class="mt-5 md:mt-0 md:col-span-2">
                <form asp-action="Create">
                    <div class="grid grid-cols-6 gap-6">

                        <div class="col-span-6 sm:col-span-3">
                            <label asp-for="StoreName" class="block text-sm font-medium text-gray-700">Store name</label>
                            <input type="text" asp-for="StoreName" autocomplete="off" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                        </div>

                        <div class="col-span-6 sm:col-span-3">
                            <label asp-for="ManagerOrderId" class="block text-sm font-medium text-gray-700">Manager ID</label>
                            <input type="number" asp-for="ManagerOrderId" autocomplete="off" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                        </div>

                        <div class="col-span-6 sm:col-span-3">
                            <label asp-for="CustomerOrderId" class="block text-sm font-medium text-gray-700">Customer ID</label>
                            <input type="number" asp-for="CustomerOrderId" autocomplete="off" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                        </div>

                        <div class="col-span-6 sm:col-span-3">
                            <label asp-for="SellerOrderId" class="block text-sm font-medium text-gray-700">Seller ID</label>
                            <input type="number" asp-for="SellerOrderId" autocomplete="off" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                        </div>

                        <div class="col-span-6 sm:col-span-3">
                            <label asp-for="ItemOrderId" class="block text-sm font-medium text-gray-700">Item ID</label>
                            <input type="number" asp-for="ItemOrderId" autocomplete="off" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                        </div>

                        <div class="col-span-6 sm:col-span-3">
                            <label asp-for="DateOfOrder" class="block text-sm font-medium text-gray-700">Date of order</label>
                            <div x-data="app()" x-init="[initDate(), getNoOfDays()]" x-cloak>
                                <div class="relative mt-1">

                                    <input type="hidden" asp-for="DateOfOrder" x-ref="date" :value="datepickerValue" />
                                    <input type="text" x-on:click="showDatepicker = !showDatepicker" x-model="datepickerValue" x-on:keydown.escape="showDatepicker = false" class="w-full pl-4 pr-10 leading-none rounded-lg shadow-sm focus:outline-none text-gray-600 font-medium focus:ring focus:ring-blue-600 focus:ring-opacity-50" placeholder="Select date" readonly />

                                    <div class="absolute top-0 right-0 px-3 py-2">
                                        <svg class="h-6 w-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                        </svg>
                                    </div>

                                    <!-- <div x-text="no_of_days.length"></div>
                <div x-text="32 - new Date(year, month, 32).getDate()"></div>
                <div x-text="new Date(year, month).getDay()"></div> -->

                                    <div class="bg-white mt-12 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-lg sm:text-sm border-gray-300 rounded-md p-4 absolute top-0 left-0" style="width: 17rem" x-show.transition="showDatepicker" @@click.away="showDatepicker = false">
                                        <div class="flex justify-between items-center mb-2">
                                            <div>
                                                <span x-text="MONTH_NAMES[month]" class="text-lg font-bold text-gray-800"></span>
                                                <span x-text="year" class="ml-1 text-lg text-gray-600 font-normal"></span>
                                            </div>
                                            <div>
                                                <button type="button" class="focus:outline-none focus:shadow-outline transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-100 p-1 rounded-full" @@click="if (month == 0) {
										year--;
										month = 12;
									} month--; getNoOfDays()">
                                                    <svg class="h-6 w-6 text-gray-400 inline-flex" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                                                    </svg>
                                                </button>
                                                <button type="button" class="focus:outline-none focus:shadow-outline transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-100 p-1 rounded-full" @@click="if (month == 11) {
										month = 0;
										year++;
									} else {
										month++;
									} getNoOfDays()">
                                                    <svg class="h-6 w-6 text-gray-400 inline-flex" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                                                    </svg>
                                                </button>
                                            </div>
                                        </div>

                                        <div class="flex flex-wrap mb-3 -mx-1">
                                            <template x-for="(day, index) in DAYS" :key="index">
                                                <div style="width: 14.26%" class="px-0.5">
                                                    <div x-text="day" class="text-gray-800 font-medium text-center text-xs"></div>
                                                </div>
                                            </template>
                                        </div>

                                        <div class="flex flex-wrap -mx-1">
                                            <template x-for="blankday in blankdays">
                                                <div style="width: 14.28%" class="text-center border p-1 border-transparent text-sm"></div>
                                            </template>
                                            <template x-for="(date, dateIndex) in no_of_days" :key="dateIndex">
                                                <div style="width: 14.28%" class="px-1 mb-1">
                                                    <div @@click="getDateValue(date)" x-text="date" class="cursor-pointer text-center text-sm leading-none rounded-full leading-loose transition ease-in-out duration-100" :class="{
                                                        'bg-indigo-200': isToday(date) == true,
                                                        'text-gray-600 hover:bg-indigo-200': isToday(date) == false && isSelectedDate(date) == false,
                                                        'bg-indigo-500 text-white hover:bg-opacity-75': isSelectedDate(date) == true
                                                    }"></div>
                                                </div>
                                            </template>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <script>
                                const MONTH_NAMES = [
                                    "January",
                                    "February",
                                    "March",
                                    "April",
                                    "May",
                                    "June",
                                    "July",
                                    "August",
                                    "September",
                                    "October",
                                    "November",
                                    "December",
                                ];
                                const MONTH_SHORT_NAMES = [
                                    "Jan",
                                    "Feb",
                                    "Mar",
                                    "Apr",
                                    "May",
                                    "Jun",
                                    "Jul",
                                    "Aug",
                                    "Sep",
                                    "Oct",
                                    "Nov",
                                    "Dec",
                                ];
                                const DAYS = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

                                function app() {
                                    return {
                                        showDatepicker: false,
                                        datepickerValue: "",
                                        selectedDate: "2021-02-04",
                                        dateFormat: "DD-MM-YYYY",
                                        month: "",
                                        year: "",
                                        no_of_days: [],
                                        blankdays: [],
                                        initDate() {
                                            let today;
                                            if (this.selectedDate) {
                                                today = new Date(Date.parse(this.selectedDate));
                                            } else {
                                                today = new Date();
                                            }
                                            this.month = today.getMonth();
                                            this.year = today.getFullYear();
                                            this.datepickerValue = this.formatDateForDisplay(
                                                today
                                            );
                                        },
                                        formatDateForDisplay(date) {
                                            let formattedDay = DAYS[date.getDay()];
                                            let formattedDate = ("0" + date.getDate()).slice(
                                                -2
                                            ); // appends 0 (zero) in single digit date
                                            let formattedMonth = MONTH_NAMES[date.getMonth()];
                                            let formattedMonthShortName =
                                                MONTH_SHORT_NAMES[date.getMonth()];
                                            let formattedMonthInNumber = (
                                                "0" +
                                                (parseInt(date.getMonth()) + 1)
                                            ).slice(-2);
                                            let formattedYear = date.getFullYear();
                                            if (this.dateFormat === "DD-MM-YYYY") {
                                                return `${formattedDate}-${formattedMonthInNumber}-${formattedYear}`; // 02-04-2021
                                            }
                                            if (this.dateFormat === "YYYY-MM-DD") {
                                                return `${formattedYear}-${formattedMonthInNumber}-${formattedDate}`; // 2021-04-02
                                            }
                                            if (this.dateFormat === "D d M, Y") {
                                                return `${formattedDay} ${formattedDate} ${formattedMonthShortName} ${formattedYear}`; // Tue 02 Mar 2021
                                            }
                                            return `${formattedDay} ${formattedDate} ${formattedMonth} ${formattedYear}`;
                                        },
                                        isSelectedDate(date) {
                                            const d = new Date(this.year, this.month, date);
                                            return this.datepickerValue ===
                                                this.formatDateForDisplay(d) ?
                                                true :
                                                false;
                                        },
                                        isToday(date) {
                                            const today = new Date();
                                            const d = new Date(this.year, this.month, date);
                                            return today.toDateString() === d.toDateString() ?
                                                true :
                                                false;
                                        },
                                        getDateValue(date) {
                                            let selectedDate = new Date(
                                                this.year,
                                                this.month,
                                                date
                                            );
                                            this.datepickerValue = this.formatDateForDisplay(
                                                selectedDate
                                            );
                                            // this.$refs.date.value = selectedDate.getFullYear() + "-" + ('0' + formattedMonthInNumber).slice(-2) + "-" + ('0' + selectedDate.getDate()).slice(-2);
                                            this.isSelectedDate(date);
                                            this.showDatepicker = false;
                                        },
                                        getNoOfDays() {
                                            let daysInMonth = new Date(
                                                this.year,
                                                this.month + 1,
                                                0
                                            ).getDate();
                                            // find where to start calendar day of week
                                            let dayOfWeek = new Date(
                                                this.year,
                                                this.month
                                            ).getDay();
                                            let blankdaysArray = [];
                                            for (var i = 1; i <= dayOfWeek; i++) {
                                                blankdaysArray.push(i);
                                            }
                                            let daysArray = [];
                                            for (var i = 1; i <= daysInMonth; i++) {
                                                daysArray.push(i);
                                            }
                                            this.blankdays = blankdaysArray;
                                            this.no_of_days = daysArray;
                                        },
                                    };
                                }
                            </script>
                        </div>

                        <div class="col-span-6 sm:col-span-3">
                            <label asp-for="ImageUrl" class="block text-sm font-medium text-gray-700">Image url</label>
                            <input type="text" asp-for="ImageUrl" autocomplete="off" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                        </div>

                        <div class="col-span-6 sm:col-span-3">
                            <label asp-for="ItemQuantity" class="block text-sm font-medium text-gray-700">Quantity</label>
                            <input type="number" asp-for="ItemQuantity" autocomplete="off" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                        </div>

                        <div class="col-span-6 sm:col-span-3">
                            <label asp-for="ItemQuality" class="block text-sm font-medium text-gray-700">Quality</label>
                            <input type="text" asp-for="ItemQuality" autocomplete="off" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                        </div>
                        <div class="col-span-6 sm:col-span-3">
                            <label asp-for="Price" class="block text-sm font-medium text-gray-700">Price</label>
                            <input type="number" asp-for="Price" autocomplete="off" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                        </div>
                        <div class="col-span-6 sm:col-span-3">
                            <label asp-for="Delivered" class="block text-sm font-medium text-gray-700">Delivered</label>
                            <input asp-for="Delivered" autocomplete="off" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                        </div>
                    </div>

                    <hr class="mt-5" />
                    <div class="pt-5">
                        <div class="flex justify-end">
                            <a asp-action="Index" type="button" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                Back to list
                            </a>
                            <button type="submit" class="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                Create
                            </button>
                        </div>
                    </div>
                </form>
            </div>

            
        </div>
    </div>
    @*<div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="OrderId" class="control-label"></label>
                    <input asp-for="OrderId" class="form-control" />
                    <span asp-validation-for="OrderId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="StoreName" class="control-label"></label>
                    <input asp-for="StoreName" class="form-control" />
                    <span asp-validation-for="StoreName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ManagerOrderId" class="control-label"></label>
                    <input asp-for="ManagerOrderId" class="form-control" />
                    <span asp-validation-for="ManagerOrderId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CustomerOrderId" class="control-label"></label>
                    <input asp-for="CustomerOrderId" class="form-control" />
                    <span asp-validation-for="CustomerOrderId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SellerOrderId" class="control-label"></label>
                    <input asp-for="SellerOrderId" class="form-control" />
                    <span asp-validation-for="SellerOrderId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ItemOrderId" class="control-label"></label>
                    <input asp-for="ItemOrderId" class="form-control" />
                    <span asp-validation-for="ItemOrderId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Price" class="control-label"></label>
                    <input asp-for="Price" class="form-control" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DateOfOrder" class="control-label"></label>
                    <input asp-for="DateOfOrder" class="form-control" />
                    <span asp-validation-for="DateOfOrder" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ImageUrl" class="control-label"></label>
                    <input asp-for="ImageUrl" class="form-control" />
                    <span asp-validation-for="ImageUrl" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ItemQuantity" class="control-label"></label>
                    <input asp-for="ItemQuantity" class="form-control" />
                    <span asp-validation-for="ItemQuantity" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ItemQuality" class="control-label"></label>
                    <input asp-for="ItemQuality" class="form-control" />
                    <span asp-validation-for="ItemQuality" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>*@

</div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
